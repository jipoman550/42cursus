
char	*ft_itoa(int n)
{

}

#include <stdio.h>

int main()
{
	int a = 123;
	char *ret;

	ret = ft_itoa(a);
	printf("%s\n", ret); // 123(물론 문자 : "123");
}

1. 우선 n에 들어가는 정수의 자릿 수를 구하는 로직이 필요할 듯? -> 자릿수 + 1 만큼 malloc해야됨.
    10으로 계속 나눠서 몫이 0이 되는 횟수를 자릿수라고 하면?
    예) n = 123 / 10 = 12 / 10 = 2 / 10 0 => 3번 즉 3자리수
    3 + 1 char * 형 malloc ㄱㄱ

2. 각 자리수를 문자열에 넣어야지.
    return 할 char *ret형을 선언하고 거기에 자릿수만큼의 10의 거듭제곱을 하는거임
    예) 123 이면 123 / 10^(3-1) -> ret[0]
                23 / 10^(2-1) -> ret[1]
                3 / 10^(1-1) -> ret[2]
        다 넣었으면 마지막에 ret[3] = '\0'을 하는 거지

예외처리
    1. int : int의 범위를 보고 최소값확인하기
    2. long long으로 해버릴까?